/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define NUM 3

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kt FSLH>, <&kt ESC>;

            tapping-term-ms = <150>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        NUM {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q               &kp W  &kp E     &kp R            &kp T                       &kp Y      &kp U      &kp I      &kp O    &kp P                 &kp BSPC
&kp LCTRL  &mt LEFT_SHIFT A    &kp S  &kp D     &kp F            &kp G                       &kp H      &kp J      &kp K      &kp L    &mt RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &mt LEFT_CONTROL Z  &kp X  &kp C     &kp V            &kp B                       &kp N      &kp M      &kp COMMA  &kp DOT  &td0                  &kp ESC
                                      &kp LGUI  &lt 1 BACKSPACE  &mt RS(RC(RA(RGUI))) RET    &kp SPACE  &lt 2 ESC  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |BTCLR|     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | ENT |   | SPC |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                      &kp N6     &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &kp SQT  &trans
&kp LSHFT   &bt BT_CLR    &trans        &trans        &trans        &trans                      &trans     &trans    &trans    &kp BSPC   &kp ESC  &trans
                                        &kp LGUI      &trans        &mt RS(RC(RA(RGUI))) RET    &kp SPACE  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | ENT |   | SPC |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                   &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp LSHFT  &none   &none     &none     &none                       &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp LCTRL  &none   &none     &none     &none                       &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                              &kp LGUI  &trans    &mt RS(RC(RA(RGUI))) RET    &kp SPACE  &trans     &kp RALT
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | ENT |   | SPC |     | ALT |

            label = "Number";
            bindings = <
&kp TAB    &kp TAB    &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                   &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp LSHFT  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                   &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp LCTRL  &kp EXCL  &trans    &trans    &trans                      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LGUI  &trans    &mt RS(RC(RA(RGUI))) RET    &kp SPACE  &trans     &kp RALT
            >;
        };
    };
};
